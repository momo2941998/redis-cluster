services:
  redis_1:
    image: 'redis:6'
    container_name: redis_1
    ports:
      - "6380:6379"
    user: "1000:1000"
    volumes:
      - ./data/redis1:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    networks:
      redis_cluster_net:
        ipv4_address: 173.18.0.2

  redis_2:
    image: 'redis:6'
    container_name: redis_2
    ports:
      - "6381:6379"
    user: "1000:1000"
    volumes:
      - ./data/redis2:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    networks:
      redis_cluster_net:
        ipv4_address: 173.18.0.3

  redis_3:
    image: 'redis:6'
    container_name: redis_3
    ports:
      - "6382:6379"
    user: "1000:1000"
    volumes:
      - ./data/redis3:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    networks:
      redis_cluster_net:
        ipv4_address: 173.18.0.4
  
  redis_4:
    image: 'redis:6'
    container_name: redis_4
    user: "1000:1000"
    ports:
      - "6383:6379"
    volumes:
      - ./data/redis4:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    networks:
      redis_cluster_net:
        ipv4_address: 173.18.0.5

  redis_5:
    image: 'redis:6'
    container_name: redis_5
    user: "1000:1000"
    ports:
      - "6384:6379"
    volumes:
      - ./data/redis5:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    networks:
      redis_cluster_net:
        ipv4_address: 173.18.0.6
  
  redis_6:
    image: 'redis:6'
    container_name: redis_6
    user: "1000:1000"
    ports:
      - "6385:6379"
    volumes:
      - ./data/redis6:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    networks:
      redis_cluster_net:
        ipv4_address: 173.18.0.7

  # Ephemeral container to create the Redis cluster connections.
  # Once the setup is done, this container shuts down
  # and the cluster can be used by the service app container
  cluster_initiator:
    container_name: cluster_initiator
    build:
      context: redis
      dockerfile: Dockerfile
    # tty: true
    depends_on:
      - redis_1
      - redis_2
      - redis_3
      - redis_4
      - redis_5
      - redis_6

    command: sh -c "tail -f /etc/os-release"
    networks:
      redis_cluster_net:
        ipv4_address: 173.18.0.8

  # # Web UI to browse through our Redis data across all nodes
  # redis_commander:
  #   image: rediscommander/redis-commander:latest
  #   container_name: redis_web
  #   environment:
  #     REDIS_HOSTS: "local:192.168.1.220:6380:0:foobared,local:192.168.1.220:6381:0:foobared,local:192.168.1.220:6382:0:foobared"
  #   ports:
  #     - "5001:8081"
  #   depends_on:
  #     - redis_1
  #     - redis_2
  #     - redis_3
  #     - redis_4
  #     - redis_5
  #     - redis_6
  #     - cluster_initiator
  #   networks:
  #     redis_cluster_net:
  #       ipv4_address: 173.18.0.9
# Rename the default network so we can easily identify it
# Across all containers
networks:
  redis_cluster_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.18.0.0/16
